{"version":3,"sources":["Store/Actions.js","Store/ActionTypes.js","Components/AddChild.js","App.js","serviceWorker.js","Store/Reducers.js","index.js"],"names":["addFile","type","payload","name","addFolder","AddChild","props","onChangeName","e","setState","target","value","submitForm","folder","state","style","backgroundColor","borderRadius","marginTop","padding","this","className","placeholder","onChange","margin","onClick","React","Component","App","connect","dispatch","promptFileBox","window","prompt","undefined","promptFolderBox","updateTracker","console","log","toggleAddFolder","toggleAddFile","tracker","width","marginLeft","map","item","index","updateToolTip","class","folders","path","join","files","fs","Boolean","location","hostname","match","initialStore","id","reducer","action","newFile","newFolder","x","splicedArr","filter","RootReducer","combineReducers","Reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fbc5de80.chunk.js","sourcesContent":["import * as actions from './ActionTypes';\n\nexport const addFile=({name})=>{\n    return {\n        type:actions.addFile,\n        payload:{name}\n    }\n}\n\nexport const removeFile=({id})=>{\n    return {\n        type:actions.removeFile,\n        payload:{id}\n    }\n}\n\nexport const addFolder=({name})=>{\n    return {\n        type:actions.addFolder,\n        payload:{name}\n    }\n}\n\nexport const removeFolder=({id})=>{\n    return {\n        type:actions.removeFolder,\n        payload:{id}\n    }\n}\n\n\n\nexport const updateTracker=({name})=>{\n    console.log(\"Inside the tracker updater action\")\n    console.log(name);\n    return {\n        type:actions.updateTracker,\n        payload:name\n    }\n}\n\n\n\n\nexport const updateToolTip=({index})=>{\n    console.log(\"Inside of the tooltip updater\");\n    console.log(index);\n    return {\n        type:actions.updateToolTip,\n        payload:index\n    }\n}","export const addFile='ADD_FILE';\nexport const removeFile='DELETE_FILE';\nexport const addFolder='ADD_FOLDER';\nexport const removeFolder='DELETE_FOLDER';\nexport const updateTracker='UPDATE_TRACKER';\nexport const updateToolTip='UPDATE_TOOLTIP';","import React from 'react';\nimport {connect} from 'react-redux';\nimport './global.css';\nimport {addFile,addFolder} from '../Store/Actions';\n\nclass AddChild extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            name:''\n        }\n    }\n    onChangeName=(e)=>{\n        this.setState({name:e.target.value});\n    }\n    submitForm=()=>{\n        if(this.props.folder){\n            this.props.addFolder({name:this.state.name});\n        }\n        else{\n            this.props.addFile({name:this.state.name});\n        }\n    }\n\n    render(){\n        return(\n            <div style={{backgroundColor:\"#ababea\", borderRadius:\"15px\", marginTop:'20px'}}>\n                <div style={{padding:\"14px\"}}>\n                {this.props.folder?<input className=\"form-control\" placeholder=\"Folder Name\" value={this.state.name} onChange={this.onChangeName}></input>:<input className=\"form-control\" onChange={this.onChangeName} placeholder=\"File Name\" value={this.state.name}></input>}\n                </div>\n                <div className=\"centeredCss\" style={{marginTop:\"10px\"}}>\n                {this.props.folder?<button className=\"btn btn-primary\" style={{margin:'5px'}} onClick={this.submitForm}>Add Folder</button>:<button className=\"btn btn-primary\" style={{margin:'5px'}} onClick={this.submitForm}>Add File</button>}\n                </div>\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return {\n        addFile:({name})=>dispatch(addFile({name})),\n        addFolder:({name})=>dispatch(addFolder({name}))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(AddChild);","import React from 'react';\nimport { connect } from 'react-redux';\nimport \"./Components/global.css\"\nimport AddChild from './Components/AddChild';\nimport { addFile, addFolder, updateTracker, updateToolTip } from './Store/Actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleAddFolder: false,\n      toggleAddFile: false\n    }\n  }\n\n  promptFileBox = () => {\n    let value = window.prompt(\"Please provide the file name\");\n    if (value != \"\" || value !== undefined) {\n      this.props.addFile({ name: value });\n    }\n  }\n  promptFolderBox = () => {\n    let value = window.prompt(\"Please provide the Folder name\");\n    if (value != \"\" || value !== undefined) {\n      this.props.addFolder({ name: value });\n    }\n  }\n  updateTracker = (name) => {\n    console.log(\"Inside the tracker\");\n    console.log(name);\n    this.props.updateTracker({ name });\n  }\n  render() {\n    console.log(this.props.tracker)\n    return (\n      <div>\n        <div className=\"centeredCss\" style={{ marginTop: \"20px\" }}>\n          <div className=\"col-md-6\" >\n            <div className=\"spaceAroundCss\" style={{ width: \"100%\" }}>\n              <button className=\"btn btn-sm btn-primary\" onClick={this.promptFileBox}>Add File</button>\n              <button className=\"btn btn-sm btn-primary\" onClick={this.promptFolderBox}>Add Folder</button>\n            </div>\n          </div>\n        </div>\n        <div style={{ marginLeft: \"40px\" }}>\n          <div className=\"row\">\n            {this.props.tracker.map((item, index) => (\n              <div>\n                {index == 0 ? <span onClick={() => this.props.updateToolTip({ index })} class=\"badge badge-success\">root/</span> : <span onClick={() => this.props.updateToolTip({ index })} class=\"badge badge-success\">{item}</span>}\n              </div>\n            ))}\n          </div>\n          <div className=\"col-md-8\">\n            <ul className=\"list-group\">\n              {this.props.folders.map(item => (\n                <div>\n                  {console.log(item)}\n                  {item.path == this.props.tracker.join('') ? <li className=\"list-group-item list-group-item-action\" onClick={() => this.updateTracker(item.name + '/')}>{item.name}/</li> : null}\n                </div>\n              ))}\n            </ul>\n            {this.props.files.map(item => (\n              <div>\n                {item.path == this.props.tracker.join('') ? <li style={{ backgroundColor: '#d5d5de' }} className=\"list-group-item \" >{item.name}</li> : null}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    files: state.fs.files,\n    folders: state.fs.folders,\n    tracker: state.fs.tracker,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addFile: ({ name }) => dispatch(addFile({ name })),\n    addFolder: ({ name }) => dispatch(addFolder({ name })),\n    updateTracker: ({ name }) => dispatch(updateTracker({ name })),\n    updateToolTip: ({ index }) => dispatch(updateToolTip({ index }))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actions from './ActionTypes';\nimport uuid from 'uuid';\n\nconst initialStore = {\n    folders:[],\n    files:[],\n    tracker:['/'],\n    id:0\n}\n\n\nconst reducer = (state = initialStore, action) => {\n    switch (action.type) {\n        case actions.addFile:\n            let newFile={name:action.payload.name, path:state.tracker.join(''), id:state.id++};\n            return { ...state, files: [...state.files, newFile], id:state.id++};\n        case actions.addFolder:\n            let newFolder={name:action.payload.name, path:state.tracker.join(''), id:state.id++}\n            return {...state, folders:[...state.folders, newFolder], id:state.id++};\n        case actions.updateTracker:\n            let x=[...state.tracker, action.payload]\n            console.log(x);\n            return {...state, tracker:x}\n        case actions.updateToolTip:\n            let splicedArr=state.tracker.filter((item, index)=>index<=action.payload);\n            console.log(action.payload);\n            return {...state, tracker:splicedArr}\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport Reducer from './Store/Reducers';\nimport {createStore, applyMiddleware, combineReducers, compose} from 'redux';\nimport {Provider} from 'react-redux';\n\nconst RootReducer=combineReducers({\n    fs:Reducer\n});\nconst composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store=createStore(RootReducer, composeEnhancers(applyMiddleware()));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}